{
  "id": "cc47639affd6708595e97e25c1a5584e",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.9",
  "solcLongVersion": "0.8.9+commit.e5eed63a",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/lottery.sol": {
        "content": "/**\n * Goals:\n *    1- Participer à la lotterie - Enter\n *    2- Selectionner aléatoirement un gagnant (aléatoire vérifiable)  - Chainlink VRF\n *    3- Un gagnant selectionné toutes les 10 minutes (ceci est automatisé) - Chainlink keepers\n *    4- Note::  uttilisation de Chainlink Oracle pour Randomness et Automated execution (Keepers)\n */\n\n//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.8;\n\ncontract lottery {\n    \n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": false,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata",
            "devdoc",
            "userdoc",
            "storageLayout",
            "evm.gasEstimates"
          ],
          "": [
            "ast"
          ]
        }
      },
      "metadata": {
        "useLiteralContent": true
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/lottery.sol": {
        "lottery": {
          "abi": [],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212202cece32dbe3635f62ac253bf5a2a754cba0ae2586629c6d14fdee141451af13f64736f6c63430008090033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0xEC 0xE3 0x2D 0xBE CALLDATASIZE CALLDATALOAD 0xF6 0x2A 0xC2 MSTORE8 0xBF GAS 0x2A PUSH22 0x4CBA0AE2586629C6D14FDEE141451AF13F64736F6C63 NUMBER STOP ADDMOD MULMOD STOP CALLER ",
              "sourceMap": "406:25:0:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600080fdfea26469706673582212202cece32dbe3635f62ac253bf5a2a754cba0ae2586629c6d14fdee141451af13f64736f6c63430008090033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0xEC 0xE3 0x2D 0xBE CALLDATASIZE CALLDATALOAD 0xF6 0x2A 0xC2 MSTORE8 0xBF GAS 0x2A PUSH22 0x4CBA0AE2586629C6D14FDEE141451AF13F64736F6C63 NUMBER STOP ADDMOD MULMOD STOP CALLER ",
              "sourceMap": "406:25:0:-:0;;;;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "12600",
                "executionCost": "66",
                "totalCost": "12666"
              }
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lottery.sol\":\"lottery\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lottery.sol\":{\"content\":\"/**\\n * Goals:\\n *    1- Participer \\u00e0 la lotterie - Enter\\n *    2- Selectionner al\\u00e9atoirement un gagnant (al\\u00e9atoire v\\u00e9rifiable)  - Chainlink VRF\\n *    3- Un gagnant selectionn\\u00e9 toutes les 10 minutes (ceci est automatis\\u00e9) - Chainlink keepers\\n *    4- Note::  uttilisation de Chainlink Oracle pour Randomness et Automated execution (Keepers)\\n */\\n\\n//SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.8;\\n\\ncontract lottery {\\n    \\n}\\n\",\"keccak256\":\"0x292fb20e81542ee638876a4b3342685c520ba23687499e13c189951c81518534\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      }
    },
    "sources": {
      "contracts/lottery.sol": {
        "ast": {
          "absolutePath": "contracts/lottery.sol",
          "exportedSymbols": {
            "lottery": [
              2
            ]
          },
          "id": 3,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".8"
              ],
              "nodeType": "PragmaDirective",
              "src": "381:23:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "lottery",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 2,
              "linearizedBaseContracts": [
                2
              ],
              "name": "lottery",
              "nameLocation": "415:7:0",
              "nodeType": "ContractDefinition",
              "nodes": [],
              "scope": 3,
              "src": "406:25:0",
              "usedErrors": []
            }
          ],
          "src": "381:51:0"
        },
        "id": 0
      }
    }
  }
}
